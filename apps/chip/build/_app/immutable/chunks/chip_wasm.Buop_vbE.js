let c;const a=new Array(128).fill(void 0);a.push(void 0,null,!0,!1);function l(e){return a[e]}let y=a.length;function R(e){e<132||(a[e]=y,y=e)}function d(e){const n=l(e);return R(e),n}function u(e){y===a.length&&a.push(a.length+1);const n=y;return y=a[n],a[n]=e,n}const E=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&E.decode();let w=null;function m(){return(w===null||w.byteLength===0)&&(w=new Uint8Array(c.memory.buffer)),w}function s(e,n){return e=e>>>0,E.decode(m().subarray(e,e+n))}function L(){c.start()}let p=0;const h=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},I=typeof h.encodeInto=="function"?function(e,n){return h.encodeInto(e,n)}:function(e,n){const t=h.encode(e);return n.set(t),{read:e.length,written:t.length}};function T(e,n,t){if(t===void 0){const f=h.encode(e),_=n(f.length,1)>>>0;return m().subarray(_,_+f.length).set(f),p=f.length,_}let r=e.length,o=n(r,1)>>>0;const b=m();let i=0;for(;i<r;i++){const f=e.charCodeAt(i);if(f>127)break;b[o+i]=f}if(i!==r){i!==0&&(e=e.slice(i)),o=t(o,r,r=i+e.length*3,1)>>>0;const f=m().subarray(o+i,o+r),_=I(e,f);i+=_.written,o=t(o,r,i,1)>>>0}return p=i,o}function U(e){const n=T(e,c.__wbindgen_malloc,c.__wbindgen_realloc),t=p,r=c.parse(n,t);return d(r)}function S(e,n){try{return e.apply(this,n)}catch(t){c.__wbindgen_exn_store(u(t))}}let g=null;function x(){return(g===null||g.byteLength===0)&&(g=new Int32Array(c.memory.buffer)),g}async function j(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(r){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}const t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}else{const t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}function M(){const e={};return e.wbg={},e.wbg.__wbindgen_object_drop_ref=function(n){d(n)},e.wbg.__wbg_log_c9486ca5d8e2cbe8=function(n,t){let r,o;try{r=n,o=t,console.log(s(n,t))}finally{c.__wbindgen_free(r,o,1)}},e.wbg.__wbg_log_aba5996d9bde071f=function(n,t,r,o,b,i,f,_){let A,W;try{A=n,W=t,console.log(s(n,t),s(r,o),s(b,i),s(f,_))}finally{c.__wbindgen_free(A,W,1)}},e.wbg.__wbg_mark_40e050a77cc39fea=function(n,t){performance.mark(s(n,t))},e.wbg.__wbg_measure_aa7a73f17813f708=function(){return S(function(n,t,r,o){let b,i,f,_;try{b=n,i=t,f=r,_=o,performance.measure(s(n,t),s(r,o))}finally{c.__wbindgen_free(b,i,1),c.__wbindgen_free(f,_,1)}},arguments)},e.wbg.__wbg_new_abda76e883ba8a5f=function(){const n=new Error;return u(n)},e.wbg.__wbg_stack_658279fe44541cf6=function(n,t){const r=l(t).stack,o=T(r,c.__wbindgen_malloc,c.__wbindgen_realloc),b=p;x()[n/4+1]=b,x()[n/4+0]=o},e.wbg.__wbg_error_f851667af71bcfc6=function(n,t){let r,o;try{r=n,o=t,console.error(s(n,t))}finally{c.__wbindgen_free(r,o,1)}},e.wbg.__wbindgen_number_new=function(n){return u(n)},e.wbg.__wbindgen_object_clone_ref=function(n){const t=l(n);return u(t)},e.wbg.__wbindgen_string_new=function(n,t){const r=s(n,t);return u(r)},e.wbg.__wbg_set_841ac57cff3d672b=function(n,t,r){l(n)[d(t)]=d(r)},e.wbg.__wbg_new_16b304a2cfa7ff4a=function(){const n=new Array;return u(n)},e.wbg.__wbg_new_72fb9a18b5ae2624=function(){const n=new Object;return u(n)},e.wbg.__wbg_set_d4638f722068f043=function(n,t,r){l(n)[t>>>0]=d(r)},e.wbg.__wbindgen_throw=function(n,t){throw new Error(s(n,t))},e}function O(e,n){return c=e.exports,k.__wbindgen_wasm_module=n,g=null,w=null,c.__wbindgen_start(),c}function v(e){if(c!==void 0)return c;const n=M();e instanceof WebAssembly.Module||(e=new WebAssembly.Module(e));const t=new WebAssembly.Instance(e,n);return O(t,e)}async function k(e){if(c!==void 0)return c;typeof e>"u"&&(e=new URL(""+new URL("../assets/chip_wasm_bg.CK3t2Oz0.wasm",import.meta.url).href,import.meta.url));const n=M();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:t,module:r}=await j(await e,n);return O(t,r)}export{k as default,v as initSync,U as parse,L as start};
